{"title":"01. VOC","markdown":{"yaml":{"title":"01. VOC","author":"gc","date":"10/31/23","categories":["python"]},"headingText":"import($\\star$$\\star$$\\star$)","containsRefs":false,"markdown":"\n\n\n***\n\n# 문제 요구사항\n\n`-` 주제 : 데이터를 분석 및 전처리한 후 머신러닝과 딥러닝으로 VOC를 제기한 고객의 해지여부를 예측하고 결과를 분석하세요.\n\n+ 각 문제의 답안코드는 반드시 '# 여기에 답안코드를 작성하세요'로 표시된 cell에 작성해주세요.\n+ 문제에 제시된 가이드를 읽고 답안 작성하세요.\n+ 문제에 변수명이 제시된 경우 반드시 해당 변수명을 사용하세요.\n+ 본 파일과 관련 데이터 파일은 제 3자에게 공유하거나 개인적인 용도로 사용하는 등 외부로 유출할 수 없으며 유출로 인한 책임은 응시자 본인에게 있습니다.\n<br>\n\n# 1. Tabular 데이터 로딩\n\n# 2. 데이터 구성확인\n\n### `voc_trt_perd_itg_cd` 칼럼에 고유값 count\n\n# 3. 불필요한 칼럼 삭제\n\n`-` 'voc_mis_pbls_yn' 컬럼은 'N' 값이 99% 이상 차지하므로 삭제\n\n`-` 날짜 관련 컬럼 삭제\n\n# 4. 데이터 결측치 처리 \n\n+ DataFrame replace 함수를 사용해서 모든 컬럼에 대해 '_'값을 null로 변경\n+ Null 표현: np.nan \n+ \"df1\" DataFrame 자체에 저장할 것이므로 inplace=True 사용\n+ 컬럼별 Null 갯수 확인\n\n# 5. `cust_clas_itg_cd`의 결측치를 최빈값으로 변경\n\n# 6. `age_itg_cd`의 결측치를 중앙값으로 변경하고 데이터 타입을 정수로 변경\n\n# 7.  `cont_sttus_itg_cd`의 null 값과 `cust_dtl_ctg_itg_cd`의 null 값을 최빈값(mode)으로 변경\n\n# 라벨 인코딩, 원핫 인코딩($\\star$$\\star$$\\star$)\n\n`-` `df1`에서 문자열(object) 데이터 타입을 가진 열들을 선택하여 `cat_cols`라는 변수에 저장 \n\n## sklearn의 모듈을 읽어와 범주형 데이터를 카테고리화($\\star\\star\\star$)\n\n`-` cat_cols 데이터프레임에서 `cust_clas_itg_cd` 열의 범주형 데이터를 숫자로 인코딩하고, 그 결과를 `le_cust_clas_itg_cd` 열에 저장\n\n# 8. 범주형 컬럼(cat_columns)에 대해서 One-Hot-Encoding될 수 있도록 Pandas의 get_dummies 함수를 적용\n\n+ 범주형 컬럼을 찾아 cat_columns에 저장하세요\n+ Pandas의 get_dummies 함수 사용\n+ 대상 데이터프레임 : df1\n+ columns=cat_columns\n+ drop_first=True\n+ 해당 전처리가 반영된 결과를 'df1' DataFrame에 저장해 주세요.\n\n# x,y 데이터 분리\n\n# 9. 아래 조건에 맞게 데이터를 분리\n\n`-` X, y 값을 가지고 8:2 비율로 Train , Test Dataset으로 나누려고 합니다. 아래 조건에 따라 훈련데이터셋과 테스트데이터셋으로 분리하세요.\n\n+ 대상 데이터프레임 : df1\n+ 훈련 데이터셋 label : y_train, 훈련 데이터셋 Feature : X_train\n+ 테스트 데이터셋 label : y_test, 테스트 데이터셋 Feature : X_test\n+ X, y, test_size=0.2, stratify=y, random_state=0\n+ 사이킷런 train_test_split 함수 사용\n\n# 데이터 정규분포화, 표준화\n\n# 문제 10. 아래 조건에 맞게 데이터를 스케일링\n\n+ 사이킷런의 MinMaxScaler() 함수 사용, 임포트하세요.\n+ MinMaxScaler 객체를 초기화하고 mms 변수에 저장\n+ 훈련 데이터 'X_train'을 최소-최대 스케일링하여 변환, fit_transform 메서드 적용\n+ 테스트 데이터 'X_test'를 훈련 데이터에 맞춰 스케일링, transform 메서드 적용\n\n`-` `voc_prod_sbt_id` 컬럼의 값이 1보다 작은 숫자인 것 확인\n\n# 머신러닝 모델링 & 모델 성능평가 및 그래프 출력\n\n# 문제 11. 로지스틱 모델을 만들고 학습을 진행\n\n+ 규제강도C : 1.0으로 설정\n+ 계산에 사용할 작업수 max_iter : 2000으로 설정\n+ fit을 활용해 모델을 학습해주세요. 학습 시 훈련데이터 셋을 활용해주세요.\n+ 모델의 테스트 데이터 X_test에 대한 예측 정확도를 계산해주세요\n\n# 문제 12. 결과 시각화\n\n`-` heatmap괴 classification_report를 사용\n\n+ X_test에 대한 예측 수행, 'y_pred'에 결과를 저장하세요.\n+ 'y_test'와 'y_pred'를 비교하여 confusion_matrix 생성, 'cf_matrix' 변수에 저장하세요.\n+ heatmap 옵션 : annot=True, fmt='d'\n+  'y_test'와 'y_pred'를 비교하여 성능지표 출력\n\n# 문제 13. tree\n\n# 문제 14. RF\n\n# 문제 15. XGBoost\n\n# 문제 16. lightgbm($\\star$$\\star$$\\star$)\n\n# 문제 17. 아래에 따라 딥러닝 모델을 작성($\\star$$\\star$$\\star$)\n\n+ Tensoflow의 Sequential() 함수를 사용하여 model로 저장하세요.\n+ 첫번째 Hidden Layer : unit 64, activation='relu', input_shape=(34,) 입력\n+ 두번째 Hidden Layer : unit 32 , activation='relu'\n+ 세번째 Hidden Layer : unit 16 , activation='relu'\n+ 각 Hidden Layer 마다 Dropout 0.2 비율로 되도록 하세요.\n+ 마지막 Dense에서 'sigmoid' 설정하세요. (0.5 이하이면 정상, 아니면 해지)\n+ 옵티마이저는 adam, 손실함수는 binary_crossentropy를 사용하세요.\n+ EarlyStopping 콜백으로 정해진 epoch 동안 모니터링 지표가 향상되지 않을 때 훈련을 중지하도록 설정하세요 (모니터링 지표 : val_loss)\n+ ModelCheckpoint 콜백으로 validation performance가 좋은 모델을 'my_checkpoint.ckpt' 파일로 저장하세요.(모니터링 지표 : val_loss)\n+ EarlyStopping 객체는 es 변수에 ModelCheckpoint 객체는 mc 변수에 저장해서 활용해 주세요.\n+ 학습정보는 history 변수에 저장하세요.\n\n***\n\n# 문제 18. 성능 시각화\n\nMatplotlib 라이브러리 활용해서 학습 손실과 검증 손실을 그래프로 표시하세요.\n\n* 1개의 그래프에 학습 손실과 검증 손실 2가지를 모두 표시하세요.\n\n* 가로 10, 세로 5로 그래프 크기 설정, figsize=(10,5)\n\n* 범례는 'Train Loss'와 'Validation Loss'로 표시하세요. x축에는 'Epochs', y축에는 'Loss'라고 표시하세요. \n\n# 잘 안되는 거\n\n`1` 스케일링\n\n`2` 원핫인코딩\n\n`3` matplotlib 한글폰트 \n\n`4` Lightgbm\n\n`5` 조기종료, 모델 체크포인트\n","srcMarkdownNoYaml":"\n\n# import($\\star$$\\star$$\\star$)\n\n***\n\n# 문제 요구사항\n\n`-` 주제 : 데이터를 분석 및 전처리한 후 머신러닝과 딥러닝으로 VOC를 제기한 고객의 해지여부를 예측하고 결과를 분석하세요.\n\n+ 각 문제의 답안코드는 반드시 '# 여기에 답안코드를 작성하세요'로 표시된 cell에 작성해주세요.\n+ 문제에 제시된 가이드를 읽고 답안 작성하세요.\n+ 문제에 변수명이 제시된 경우 반드시 해당 변수명을 사용하세요.\n+ 본 파일과 관련 데이터 파일은 제 3자에게 공유하거나 개인적인 용도로 사용하는 등 외부로 유출할 수 없으며 유출로 인한 책임은 응시자 본인에게 있습니다.\n<br>\n\n# 1. Tabular 데이터 로딩\n\n# 2. 데이터 구성확인\n\n### `voc_trt_perd_itg_cd` 칼럼에 고유값 count\n\n# 3. 불필요한 칼럼 삭제\n\n`-` 'voc_mis_pbls_yn' 컬럼은 'N' 값이 99% 이상 차지하므로 삭제\n\n`-` 날짜 관련 컬럼 삭제\n\n# 4. 데이터 결측치 처리 \n\n+ DataFrame replace 함수를 사용해서 모든 컬럼에 대해 '_'값을 null로 변경\n+ Null 표현: np.nan \n+ \"df1\" DataFrame 자체에 저장할 것이므로 inplace=True 사용\n+ 컬럼별 Null 갯수 확인\n\n# 5. `cust_clas_itg_cd`의 결측치를 최빈값으로 변경\n\n# 6. `age_itg_cd`의 결측치를 중앙값으로 변경하고 데이터 타입을 정수로 변경\n\n# 7.  `cont_sttus_itg_cd`의 null 값과 `cust_dtl_ctg_itg_cd`의 null 값을 최빈값(mode)으로 변경\n\n# 라벨 인코딩, 원핫 인코딩($\\star$$\\star$$\\star$)\n\n`-` `df1`에서 문자열(object) 데이터 타입을 가진 열들을 선택하여 `cat_cols`라는 변수에 저장 \n\n## sklearn의 모듈을 읽어와 범주형 데이터를 카테고리화($\\star\\star\\star$)\n\n`-` cat_cols 데이터프레임에서 `cust_clas_itg_cd` 열의 범주형 데이터를 숫자로 인코딩하고, 그 결과를 `le_cust_clas_itg_cd` 열에 저장\n\n# 8. 범주형 컬럼(cat_columns)에 대해서 One-Hot-Encoding될 수 있도록 Pandas의 get_dummies 함수를 적용\n\n+ 범주형 컬럼을 찾아 cat_columns에 저장하세요\n+ Pandas의 get_dummies 함수 사용\n+ 대상 데이터프레임 : df1\n+ columns=cat_columns\n+ drop_first=True\n+ 해당 전처리가 반영된 결과를 'df1' DataFrame에 저장해 주세요.\n\n# x,y 데이터 분리\n\n# 9. 아래 조건에 맞게 데이터를 분리\n\n`-` X, y 값을 가지고 8:2 비율로 Train , Test Dataset으로 나누려고 합니다. 아래 조건에 따라 훈련데이터셋과 테스트데이터셋으로 분리하세요.\n\n+ 대상 데이터프레임 : df1\n+ 훈련 데이터셋 label : y_train, 훈련 데이터셋 Feature : X_train\n+ 테스트 데이터셋 label : y_test, 테스트 데이터셋 Feature : X_test\n+ X, y, test_size=0.2, stratify=y, random_state=0\n+ 사이킷런 train_test_split 함수 사용\n\n# 데이터 정규분포화, 표준화\n\n# 문제 10. 아래 조건에 맞게 데이터를 스케일링\n\n+ 사이킷런의 MinMaxScaler() 함수 사용, 임포트하세요.\n+ MinMaxScaler 객체를 초기화하고 mms 변수에 저장\n+ 훈련 데이터 'X_train'을 최소-최대 스케일링하여 변환, fit_transform 메서드 적용\n+ 테스트 데이터 'X_test'를 훈련 데이터에 맞춰 스케일링, transform 메서드 적용\n\n`-` `voc_prod_sbt_id` 컬럼의 값이 1보다 작은 숫자인 것 확인\n\n# 머신러닝 모델링 & 모델 성능평가 및 그래프 출력\n\n# 문제 11. 로지스틱 모델을 만들고 학습을 진행\n\n+ 규제강도C : 1.0으로 설정\n+ 계산에 사용할 작업수 max_iter : 2000으로 설정\n+ fit을 활용해 모델을 학습해주세요. 학습 시 훈련데이터 셋을 활용해주세요.\n+ 모델의 테스트 데이터 X_test에 대한 예측 정확도를 계산해주세요\n\n# 문제 12. 결과 시각화\n\n`-` heatmap괴 classification_report를 사용\n\n+ X_test에 대한 예측 수행, 'y_pred'에 결과를 저장하세요.\n+ 'y_test'와 'y_pred'를 비교하여 confusion_matrix 생성, 'cf_matrix' 변수에 저장하세요.\n+ heatmap 옵션 : annot=True, fmt='d'\n+  'y_test'와 'y_pred'를 비교하여 성능지표 출력\n\n# 문제 13. tree\n\n# 문제 14. RF\n\n# 문제 15. XGBoost\n\n# 문제 16. lightgbm($\\star$$\\star$$\\star$)\n\n# 문제 17. 아래에 따라 딥러닝 모델을 작성($\\star$$\\star$$\\star$)\n\n+ Tensoflow의 Sequential() 함수를 사용하여 model로 저장하세요.\n+ 첫번째 Hidden Layer : unit 64, activation='relu', input_shape=(34,) 입력\n+ 두번째 Hidden Layer : unit 32 , activation='relu'\n+ 세번째 Hidden Layer : unit 16 , activation='relu'\n+ 각 Hidden Layer 마다 Dropout 0.2 비율로 되도록 하세요.\n+ 마지막 Dense에서 'sigmoid' 설정하세요. (0.5 이하이면 정상, 아니면 해지)\n+ 옵티마이저는 adam, 손실함수는 binary_crossentropy를 사용하세요.\n+ EarlyStopping 콜백으로 정해진 epoch 동안 모니터링 지표가 향상되지 않을 때 훈련을 중지하도록 설정하세요 (모니터링 지표 : val_loss)\n+ ModelCheckpoint 콜백으로 validation performance가 좋은 모델을 'my_checkpoint.ckpt' 파일로 저장하세요.(모니터링 지표 : val_loss)\n+ EarlyStopping 객체는 es 변수에 ModelCheckpoint 객체는 mc 변수에 저장해서 활용해 주세요.\n+ 학습정보는 history 변수에 저장하세요.\n\n***\n\n# 문제 18. 성능 시각화\n\nMatplotlib 라이브러리 활용해서 학습 손실과 검증 손실을 그래프로 표시하세요.\n\n* 1개의 그래프에 학습 손실과 검증 손실 2가지를 모두 표시하세요.\n\n* 가로 10, 세로 5로 그래프 크기 설정, figsize=(10,5)\n\n* 범례는 'Train Loss'와 'Validation Loss'로 표시하세요. x축에는 'Epochs', y축에는 'Loss'라고 표시하세요. \n\n# 잘 안되는 거\n\n`1` 스케일링\n\n`2` 원핫인코딩\n\n`3` matplotlib 한글폰트 \n\n`4` Lightgbm\n\n`5` 조기종료, 모델 체크포인트\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"2023-10-31-01. VOC.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","editor":"visual","code-copy":true,"title-block-banner":true,"title":"01. VOC","author":"gc","date":"10/31/23","categories":["python"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}